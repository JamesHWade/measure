[{"path":[]},{"path":"https://jameshwade.github.io/measure/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jameshwade.github.io/measure/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jameshwade.github.io/measure/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to anylr","title":"Contributing to anylr","text":"outlines propose change anylr. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to anylr","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to anylr","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://jameshwade.github.io/measure/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to anylr","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"JamesHWade/anylr\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to anylr","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://jameshwade.github.io/measure/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to anylr","text":"Please note anylr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://jameshwade.github.io/measure/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 James Wade Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jameshwade.github.io/measure/dev/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with anylr","title":"Getting help with anylr","text":"Thanks using anylr! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://jameshwade.github.io/measure/dev/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with anylr","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://jameshwade.github.io/measure/dev/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with anylr","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://jameshwade.github.io/measure/dev/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with anylr","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://jameshwade.github.io/measure/dev/articles/baseline.html","id":"data-cleanup","dir":"Articles","previous_headings":"","what":"Data Cleanup","title":"baseline","text":"can perform baseline correction, need reshape data. wide format columns represent wavelength value transmittance. step_baseline() function operates long format data. can reshape data tidyr.","code":"meats2 <-   meats %>%   rowid_to_column(var = \"id\") %>%   pivot_longer(     cols = starts_with(\"x_\"),     names_to = \"channel\",     values_to = \"transmittance\"   ) %>%   mutate(channel = str_extract(channel, \"[:digit:]+\") %>% as.integer()) meats2 %>%   ggplot(aes(x = channel, y = transmittance, group = id)) +   geom_line(alpha = 0.5) +   theme_light() meats2 %>%   group_by(id) %>%   subtract_rf_baseline(yvar = transmittance, span = 0.8) %>%   ggplot(aes(x = channel, color = water, group = id)) +   geom_line(aes(y = transmittance), alpha = 0.5) +   scale_color_viridis_c() +   ggtitle(\"\")"},{"path":"https://jameshwade.github.io/measure/dev/articles/measure.html","id":"scope-of-data-sources","dir":"Articles","previous_headings":"","what":"Scope of Data Sources","title":"measure","text":"Analytical measurement systems varied applications used . field necessarily broad growing. American Chemical Society defines field : science obtaining, processing, communicating information composition structure matter. words, art science determining matter much exists. Common analytical techniques include chromatography, optical spectroscopy, mass spectrometry, microscopy, many others. initial scope measure common techniques can represent data tibble series tibbles. Researchers experts performing types measurements refer equipment instruments. However, instrumental variables already meaning statistics literature, avoid terminology.","code":""},{"path":"https://jameshwade.github.io/measure/dev/articles/measure.html","id":"data-sources","dir":"Articles","previous_headings":"","what":"Data Sources","title":"measure","text":"number data sets modeldata prospectr packages. include modeldata::meats prospectr::NIRsoil. Mendeley Data offers data inlcuded part various publications. possibilities include: Machine Learning MS dataset Data : Sensitive Quantitative Analysis Abiotically Synthesized Short Homopeptides using Ultraperformance Liquid Chromatography Time--Flight Mass Spectrometry also repositories might use: Crystallography Open Database NMRShiftDB Spectral Database Organic Compounds, SDBS NIST Chemistry WebBook","code":""},{"path":"https://jameshwade.github.io/measure/dev/articles/recipes.html","id":"creating-a-recipe","dir":"Articles","previous_headings":"","what":"Creating a Recipe","title":"What is a recipe?","text":"specify recipe providing formula data arguments. Check Tidy Modeling R learn specifying formulas R. recipe funtion returns recipe object. formula argument determines roles variables. Status assigned role outcome, 13 variables assigned role predictor. Diving bit deeper, recipe object list 7 elements. Within elements, can see details saved variables. includes type source stored rec_obj$var_info.","code":"rec_obj <- recipe(Status ~ ., data = credit_train) rec_obj #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs #> Number of variables by role #> outcome:    1 #> predictor: 13 cat(names(rec_obj), sep = \"\\n\") #> var_info #> term_info #> steps #> template #> levels #> retained #> requirements #> ptype rec_obj$var_info #> # A tibble: 14 × 4 #>    variable  type      role      source   #>    <chr>     <list>    <chr>     <chr>    #>  1 Seniority <chr [2]> predictor original #>  2 Home      <chr [3]> predictor original #>  3 Time      <chr [2]> predictor original #>  4 Age       <chr [2]> predictor original #>  5 Marital   <chr [3]> predictor original #>  6 Records   <chr [3]> predictor original #>  7 Job       <chr [3]> predictor original #>  8 Expenses  <chr [2]> predictor original #>  9 Income    <chr [2]> predictor original #> 10 Assets    <chr [2]> predictor original #> 11 Debt      <chr [2]> predictor original #> 12 Amount    <chr [2]> predictor original #> 13 Price     <chr [2]> predictor original #> 14 Status    <chr [3]> outcome   original"},{"path":"https://jameshwade.github.io/measure/dev/articles/recipes.html","id":"adding-a-step","dir":"Articles","previous_headings":"","what":"Adding a Step","title":"What is a recipe?","text":"recipe yet contain steps.","code":"rec_obj$steps #> NULL  rec_obj_add_step <- rec_obj %>%   step_impute_knn(all_predictors())  rec_obj_add_step$steps #> [[1]] #> • K-nearest neighbor imputation for: all_predictors()"},{"path":"https://jameshwade.github.io/measure/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Wade. Author, maintainer.","code":""},{"path":"https://jameshwade.github.io/measure/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wade J (2025). measure: Recipes-style Interface Tidymodels Analytical Measurements. R package version 0.0.1.9000, https://github.com/jameshwade/measure, https://jameshwade.github.io/measure.","code":"@Manual{,   title = {measure: A Recipes-style Interface to Tidymodels for Analytical Measurements},   author = {James Wade},   year = {2025},   note = {R package version 0.0.1.9000,     https://github.com/jameshwade/measure},   url = {https://jameshwade.github.io/measure}, }"},{"path":"https://jameshwade.github.io/measure/dev/index.html","id":"measure","dir":"","previous_headings":"","what":"A Recipes-style Interface to Tidymodels for Analytical Measurements","title":"A Recipes-style Interface to Tidymodels for Analytical Measurements","text":"goal measure recipes-like interface tidymodels analytical characterization data.","code":""},{"path":"https://jameshwade.github.io/measure/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Recipes-style Interface to Tidymodels for Analytical Measurements","text":"can install development version measure like :","code":"remotes::install_github(\"jameshwade/measure\")"},{"path":"https://jameshwade.github.io/measure/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A Recipes-style Interface to Tidymodels for Analytical Measurements","text":"basic example shows solve common problem:","code":"library(measure) ## basic example code"},{"path":"https://jameshwade.github.io/measure/dev/reference/glucose_bioreactors.html","id":null,"dir":"Reference","previous_headings":"","what":"Raman Spectra Bioreactor Data — glucose_bioreactors","title":"Raman Spectra Bioreactor Data — glucose_bioreactors","text":"Kuhn Johnson (2013) used two data sets model glucose yeild large- small-scale bioreactors:","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/glucose_bioreactors.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Raman Spectra Bioreactor Data — glucose_bioreactors","text":"Kuhn Johnson (2020), Feature Engineering Selection, Chapman Hall/CRC . https://bookdown.org/max/FES/ https://github.com/topepo/FES","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/glucose_bioreactors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raman Spectra Bioreactor Data — glucose_bioreactors","text":"Two tibbles. , 2,651 columns whose names numbers measured assay values (names wave numbers). numeric column glucose outcome data, day number days bioreactor, batch_id reactor identifier (\"L\" large \"S\" small), batch_sample ID day.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/glucose_bioreactors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Raman Spectra Bioreactor Data — glucose_bioreactors","text":"Fifteen small-scale (5 liters) bioreactors seeded cells monitored daily 14 days. Three large-scale bioreactors also seeded cells batch monitored daily 14 days. Samples collected day bioreactors glucose measured. goal create models data numerous small-scale bioreactors evaluate results can accurately predict happening large-scale bioreactors.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/glucose_bioreactors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raman Spectra Bioreactor Data — glucose_bioreactors","text":"","code":"data(glucose_bioreactors) dim(bioreactors_small) #> [1]  210 2655"},{"path":"https://jameshwade.github.io/measure/dev/reference/measure-package.html","id":null,"dir":"Reference","previous_headings":"","what":"measure: A Recipes-style Interface to Tidymodels for Analytical Measurements — measure-package","title":"measure: A Recipes-style Interface to Tidymodels for Analytical Measurements — measure-package","text":"Analytical measurements...","code":""},{"path":[]},{"path":"https://jameshwade.github.io/measure/dev/reference/measure-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"measure: A Recipes-style Interface to Tidymodels for Analytical Measurements — measure-package","text":"Maintainer: James Wade github@jameshwade.com (ORCID)","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/meats_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Fat, water and protein content of meat samples — meats_long","title":"Fat, water and protein content of meat samples — meats_long","text":"\"data recorded Tecator Infratec Food Feed Analyzer working wavelength range 850 - 1050 nm Near Infrared Transmission (NIT) principle. sample contains finely chopped pure meat different moisture, fat protein contents.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/meats_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fat, water and protein content of meat samples — meats_long","text":"meats_long tibble","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/meats_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fat, water and protein content of meat samples — meats_long","text":"results data used publication want mention instrument company name (Tecator) publication.  addition, please send preprint article Karin Thente, Tecator AB, Box 70, S-263 21 Hoganas, Sweden data available public domain responsibility original data source. data can redistributed long permission note attached.\" \"meat sample data consists 100 channel spectrum absorbances contents moisture (water), fat protein.  absorbance -log10 transmittance measured spectrometer. three contents, measured percent, determined analytic chemistry.\" Included meats data transformed long format ","code":"modeldata::meats %>%   rowid_to_column(var = \"id\") %>%   pivot_longer(cols = starts_with(\"x_\"),                names_to = \"channel\",                values_to = \"transmittance\") %>%   mutate(channel = str_extract(channel, \"[:digit:]+\") %>% as.integer())"},{"path":"https://jameshwade.github.io/measure/dev/reference/meats_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fat, water and protein content of meat samples — meats_long","text":"","code":"data(meats_long) str(meats_long) #> tibble [21,500 × 6] (S3: tbl_df/tbl/data.frame) #>  $ id           : int [1:21500] 1 1 1 1 1 1 1 1 1 1 ... #>  $ water        : num [1:21500] 60.5 60.5 60.5 60.5 60.5 60.5 60.5 60.5 60.5 60.5 ... #>  $ fat          : num [1:21500] 22.5 22.5 22.5 22.5 22.5 22.5 22.5 22.5 22.5 22.5 ... #>  $ protein      : num [1:21500] 16.7 16.7 16.7 16.7 16.7 16.7 16.7 16.7 16.7 16.7 ... #>  $ channel      : int [1:21500] 1 2 3 4 5 6 7 8 9 10 ... #>  $ transmittance: num [1:21500] 2.62 2.62 2.62 2.62 2.62 ..."},{"path":"https://jameshwade.github.io/measure/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics tunable","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/required_pkgs.recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Set package dependencies — required_pkgs.recipe","title":"Set package dependencies — required_pkgs.recipe","text":"Set package dependencies","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/required_pkgs.recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set package dependencies — required_pkgs.recipe","text":"","code":"# S3 method for class 'step_measure_savitzky_golay' required_pkgs(x, ...)"},{"path":"https://jameshwade.github.io/measure/dev/reference/required_pkgs.recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set package dependencies — required_pkgs.recipe","text":"x step object. ... used.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit and subtract a baseline from a measurement signal — step_baseline","title":"Fit and subtract a baseline from a measurement signal — step_baseline","text":"Fit subtract baseline measurement signal","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit and subtract a baseline from a measurement signal — step_baseline","text":"","code":"step_baseline(   recipe,   ...,   role = NA,   trained = FALSE,   options = NULL,   skip = FALSE,   id = recipes::rand_id(\"measure\") )"},{"path":"https://jameshwade.github.io/measure/dev/reference/step_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit and subtract a baseline from a measurement signal — step_baseline","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. role Assign role new variables. trained logical indicate quantities preprocessing estimated. options list options default method stats::prcomp(). Argument defaults set retx = FALSE, center = FALSE, scale. = FALSE, tol = NULL. Note argument x passed (). skip logical. step skipped recipe baked bake()? operations baked prep() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_input_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Ingest Measurements from a Single Column — step_measure_input_long","title":"Ingest Measurements from a Single Column — step_measure_input_long","text":"step_measure_input_long creates specification recipe step converts measures organized column analytical results (option column numeric indices) internal format used package.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_input_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ingest Measurements from a Single Column — step_measure_input_long","text":"","code":"step_measure_input_long(   recipe,   ...,   location,   pad = FALSE,   role = \"measure\",   trained = FALSE,   columns = NULL,   skip = FALSE,   id = rand_id(\"measure_input_long\") )"},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_input_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ingest Measurements from a Single Column — step_measure_input_long","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose single column contains analytical measurements. selection order measurement's profile. location One selector functions choose single column locations analytical values. pad Whether pad measurements ensure number values. useful missing values measurements. role used step since new variables created. trained logical indicate quantities preprocessing estimated. columns character vector column names determined recipe. skip logical. step skipped recipe baked bake()? operations baked prep() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_input_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ingest Measurements from a Single Column — step_measure_input_long","text":"step designed data format column analytical measurement (e.g., absorption, etc.) another location value (e.g., wave number, etc.). step_measure_input_long() collect data put format used internally package. data structure row independent experimental unit nested tibble sample's measure (measurement location). assumes unique combinations columns data define individual patterns associated pattern. case, special values might inappropriately restructured. best advice column type indicates unique sample number measure. example, 200 values measure 7 samples, input data (long format) 1,400 rows. advise column 7 unique values indicating rows correspond sample.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_input_long.html","id":"missing-data","dir":"Reference","previous_headings":"","what":"Missing Data","title":"Ingest Measurements from a Single Column — step_measure_input_long","text":"Currently, measure assumes equal numbers values within sample. missing values measurements, need pad missing values (opposed absent row long format). , error occur.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_input_long.html","id":"tidying","dir":"Reference","previous_headings":"","what":"Tidying","title":"Ingest Measurements from a Single Column — step_measure_input_long","text":"tidy() step, tibble indicating original columns used reformat data.","code":""},{"path":[]},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_input_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Ingest Measurements in Separate Columns — step_measure_input_wide","title":"Ingest Measurements in Separate Columns — step_measure_input_wide","text":"step_measure_input_wide creates specification recipe step converts measures organized multiple columns internal format used package.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_input_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ingest Measurements in Separate Columns — step_measure_input_wide","text":"","code":"step_measure_input_wide(   recipe,   ...,   role = \"measure\",   trained = FALSE,   columns = NULL,   location_values = NULL,   skip = FALSE,   id = rand_id(\"measure_input_wide\") )"},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_input_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ingest Measurements in Separate Columns — step_measure_input_wide","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. role used step since new variables created. trained logical indicate quantities preprocessing estimated. columns character string selected variable names. field placeholder populated prep() used. location_values numeric vector values specify location measurements (e.g., wavelength etc.) order variables selected .... specified, sequence integers (starting 1L) used. skip logical. step skipped recipe baked bake()? operations baked prep() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_input_wide.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ingest Measurements in Separate Columns — step_measure_input_wide","text":"step designed data format analytical measurements separate columns. step_measure_input_wide() collect data put format used internally package. data structure row independent experimental unit nested tibble sample's measure (measurement location). assumes unique combinations columns data define individual patterns associated pattern. case, special values might inappropriately restructured. best advice column type indicates unique sample number measure. example, 20 rows input data set, columns analytically measurements show duplicate combinations 20 rows.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_input_wide.html","id":"tidying","dir":"Reference","previous_headings":"","what":"Tidying","title":"Ingest Measurements in Separate Columns — step_measure_input_wide","text":"tidy() step, tibble indicating original columns used reformat data.","code":""},{"path":[]},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_input_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ingest Measurements in Separate Columns — step_measure_input_wide","text":"","code":"data(meats, package = \"modeldata\")  # Outcome data is to the right names(meats) %>% tail(10) #>  [1] \"x_094\"   \"x_095\"   \"x_096\"   \"x_097\"   \"x_098\"   \"x_099\"   \"x_100\"   #>  [8] \"water\"   \"fat\"     \"protein\"  # ------------------------------------------------------------------------------ # Ingest data without adding the location (i.e. wave number) for the spectra  rec <-   recipe(water + fat + protein ~ ., data = meats) %>%   step_measure_input_wide(starts_with(\"x_\")) %>%   prep()  summary(rec) #> # A tibble: 4 × 4 #>   variable  type      role    source   #>   <chr>     <list>    <chr>   <chr>    #> 1 water     <chr [2]> outcome original #> 2 fat       <chr [2]> outcome original #> 3 protein   <chr [2]> outcome original #> 4 .measures <chr [1]> measure derived   # ------------------------------------------------------------------------------ # Ingest data without adding the location (i.e. wave number) for the spectra  # Make up some locations for the spectra's x-axis index <- seq(1, 2, length.out = 100)  rec <-   recipe(water + fat + protein ~ ., data = meats) %>%   step_measure_input_wide(starts_with(\"x_\"), location_values = index) %>%   prep()  summary(rec) #> # A tibble: 4 × 4 #>   variable  type      role    source   #>   <chr>     <list>    <chr>   <chr>    #> 1 water     <chr [2]> outcome original #> 2 fat       <chr [2]> outcome original #> 3 protein   <chr [2]> outcome original #> 4 .measures <chr [1]> measure derived"},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_output_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorganize Measurements to Two Columns — step_measure_output_long","title":"Reorganize Measurements to Two Columns — step_measure_output_long","text":"step_measure_output_long creates specification recipe step converts measures format columns measurement corresponding location (.e., \"long\" format).","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_output_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorganize Measurements to Two Columns — step_measure_output_long","text":"","code":"step_measure_output_long(   recipe,   values_to = \".measure\",   location_to = \".location\",   role = \"predictor\",   trained = FALSE,   skip = FALSE,   id = rand_id(\"measure_output_long\") )"},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_output_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorganize Measurements to Two Columns — step_measure_output_long","text":"recipe recipe object. step added sequence operations recipe. values_to single character string column containing analytical maesurement. location_to single character string column containing location measurement (e.g. wavenumber index). role used step since new variables created. trained logical indicate quantities preprocessing estimated. skip logical. step skipped recipe baked bake()? operations baked prep() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_output_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorganize Measurements to Two Columns — step_measure_output_long","text":"step designed convert analytical measurements internal data structure two column format.","code":""},{"path":[]},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_output_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorganize Measurements to Two Columns — step_measure_output_long","text":"","code":"library(dplyr)  data(glucose_bioreactors) bioreactors_small$batch_sample <- NULL  small_tr <- bioreactors_small[1:200, ] small_te <- bioreactors_small[201:210, ]  small_rec <-   recipe(glucose ~ ., data = small_tr) %>%   update_role(batch_id, day, new_role = \"id columns\") %>%   step_measure_input_wide(`400`:`3050`) %>%   prep()  # Before reformatting:  small_rec %>% bake(new_data = small_te) #> # A tibble: 10 × 4 #>    batch_id   day glucose .measures            #>    <chr>    <int>   <dbl> <list>               #>  1 S_15         5    2.04 <tibble [2,651 × 2]> #>  2 S_15         6    5.56 <tibble [2,651 × 2]> #>  3 S_15         7    4.65 <tibble [2,651 × 2]> #>  4 S_15         8    9.91 <tibble [2,651 × 2]> #>  5 S_15         9    4.96 <tibble [2,651 × 2]> #>  6 S_15        10    6.78 <tibble [2,651 × 2]> #>  7 S_15        11    6.72 <tibble [2,651 × 2]> #>  8 S_15        12    4.69 <tibble [2,651 × 2]> #>  9 S_15        13    6.30 <tibble [2,651 × 2]> #> 10 S_15        14    3.10 <tibble [2,651 × 2]>  # After reformatting:  output_rec <-   small_rec %>%   step_measure_output_long() %>%   prep()  output_rec %>% bake(new_data = small_te) #> # A tibble: 26,510 × 5 #>    batch_id   day glucose .measure .location #>    <chr>    <int>   <dbl>    <dbl>     <int> #>  1 S_15         5    2.04  760094.         1 #>  2 S_15         5    2.04  779053.         2 #>  3 S_15         5    2.04  797154.         3 #>  4 S_15         5    2.04  817226.         4 #>  5 S_15         5    2.04  832725.         5 #>  6 S_15         5    2.04  840075.         6 #>  7 S_15         5    2.04  841721.         7 #>  8 S_15         5    2.04  832112.         8 #>  9 S_15         5    2.04  819494.         9 #> 10 S_15         5    2.04  799601.        10 #> # ℹ 26,500 more rows"},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_output_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorganize Measurements to Separate Columns — step_measure_output_wide","title":"Reorganize Measurements to Separate Columns — step_measure_output_wide","text":"step_measure_output_wide creates specification recipe step converts measures multiple columns (.e., \"wide\" format).","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_output_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorganize Measurements to Separate Columns — step_measure_output_wide","text":"","code":"step_measure_output_wide(   recipe,   prefix = \"measure_\",   role = \"predictor\",   trained = FALSE,   skip = FALSE,   id = rand_id(\"measure_output_wide\") )"},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_output_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorganize Measurements to Separate Columns — step_measure_output_wide","text":"recipe recipe object. step added sequence operations recipe. prefix character string used name new columns. role used step since new variables created. trained logical indicate quantities preprocessing estimated. skip logical. step skipped recipe baked bake()? operations baked prep() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_output_wide.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorganize Measurements to Separate Columns — step_measure_output_wide","text":"step designed convert analytical measurements internal data structure separate columns. Wide outputs can helpful want use standard recipes steps measuresments, recipes::step_pca(), recipes::step_pls(), .","code":""},{"path":[]},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_output_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorganize Measurements to Separate Columns — step_measure_output_wide","text":"","code":"library(dplyr)  data(glucose_bioreactors) bioreactors_small$batch_sample <- NULL  small_tr <- bioreactors_small[1:200, ] small_te <- bioreactors_small[201:210, ]  small_rec <-   recipe(glucose ~ ., data = small_tr) %>%   update_role(batch_id, day, new_role = \"id columns\") %>%   step_measure_input_wide(`400`:`3050`) %>%   prep()  # Before reformatting:  small_rec %>% bake(new_data = small_te) #> # A tibble: 10 × 4 #>    batch_id   day glucose .measures            #>    <chr>    <int>   <dbl> <list>               #>  1 S_15         5    2.04 <tibble [2,651 × 2]> #>  2 S_15         6    5.56 <tibble [2,651 × 2]> #>  3 S_15         7    4.65 <tibble [2,651 × 2]> #>  4 S_15         8    9.91 <tibble [2,651 × 2]> #>  5 S_15         9    4.96 <tibble [2,651 × 2]> #>  6 S_15        10    6.78 <tibble [2,651 × 2]> #>  7 S_15        11    6.72 <tibble [2,651 × 2]> #>  8 S_15        12    4.69 <tibble [2,651 × 2]> #>  9 S_15        13    6.30 <tibble [2,651 × 2]> #> 10 S_15        14    3.10 <tibble [2,651 × 2]>  # After reformatting:  output_rec <-   small_rec %>%   step_measure_output_wide() %>%   prep()  output_rec %>% bake(new_data = small_te) #> # A tibble: 10 × 2,654 #>    batch_id   day glucose measure_0001 measure_0002 measure_0003 measure_0004 #>    <chr>    <int>   <dbl>        <dbl>        <dbl>        <dbl>        <dbl> #>  1 S_15         5    2.04      760094.      779053.      797154.      817226. #>  2 S_15         6    5.56      854812.      874105.      893653.      912190. #>  3 S_15         7    4.65      961786.      979449.     1000054.     1019400. #>  4 S_15         8    9.91     1092681.     1110867.     1132371.     1151944. #>  5 S_15         9    4.96     1243318.     1259961.     1281630.     1301011. #>  6 S_15        10    6.78     1500414.     1517867.     1536436.     1557016. #>  7 S_15        11    6.72     1818328.     1836446.     1856983.     1876906. #>  8 S_15        12    4.69     2035750.     2053903.     2073901.     2093514. #>  9 S_15        13    6.30     2192191.     2211502.     2230969.     2251089. #> 10 S_15        14    3.10     2353638.     2371877.     2392865.     2412822. #> # ℹ 2,647 more variables: measure_0005 <dbl>, measure_0006 <dbl>, #> #   measure_0007 <dbl>, measure_0008 <dbl>, measure_0009 <dbl>, #> #   measure_0010 <dbl>, measure_0011 <dbl>, measure_0012 <dbl>, #> #   measure_0013 <dbl>, measure_0014 <dbl>, measure_0015 <dbl>, #> #   measure_0016 <dbl>, measure_0017 <dbl>, measure_0018 <dbl>, #> #   measure_0019 <dbl>, measure_0020 <dbl>, measure_0021 <dbl>, #> #   measure_0022 <dbl>, measure_0023 <dbl>, measure_0024 <dbl>, …"},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_savitzky_golay.html","id":null,"dir":"Reference","previous_headings":"","what":"Savitzky-Golay Pre-Processing — step_measure_savitzky_golay","title":"Savitzky-Golay Pre-Processing — step_measure_savitzky_golay","text":"step_measure_savitzky_golay creates specification recipe step smooths filters measurement sequence.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_savitzky_golay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Savitzky-Golay Pre-Processing — step_measure_savitzky_golay","text":"","code":"step_measure_savitzky_golay(   recipe,   role = NA,   trained = FALSE,   degree = 3,   window_side = 11,   differentiation_order = 0,   skip = FALSE,   id = rand_id(\"measure_savitzky_golay\") )"},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_savitzky_golay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Savitzky-Golay Pre-Processing — step_measure_savitzky_golay","text":"recipe recipe object. step added sequence operations recipe. role used step since new variables created. trained logical indicate quantities preprocessing estimated. degree integer polynomial degree use smoothing. window_side integer many units side window. means window_side = 1 total window width 3 (e.g., width 2 * window_side + 1). differentiation_order integer degree filtering (zero indicates differentiation). skip logical. step skipped recipe baked bake()? operations baked prep() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations id character string unique step identify .","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_savitzky_golay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Savitzky-Golay Pre-Processing — step_measure_savitzky_golay","text":"updated version recipe new step added sequence existing operations.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_savitzky_golay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Savitzky-Golay Pre-Processing — step_measure_savitzky_golay","text":"method can smooth random noise reduce -predictor correlation. fits polynomial window measurements results fewer measurements input. Measurements assumed equally spaced. polynomial degree less window size. Also, window size must greater polynomial degree. either case true, original argument values increased satisfy conditions (warning). selectors supplied step function. data special internal format produced step_measure_input_wide() step_measure_input_long(). measurement locations reset integer indices starting one.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_savitzky_golay.html","id":"tidying","dir":"Reference","previous_headings":"","what":"Tidying","title":"Savitzky-Golay Pre-Processing — step_measure_savitzky_golay","text":"tidy() step, tibble columns  returned.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/step_measure_savitzky_golay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Savitzky-Golay Pre-Processing — step_measure_savitzky_golay","text":"","code":"if (rlang::is_installed(\"prospectr\")) {   rec <-     recipe(water + fat + protein ~ ., data = meats_long) %>%     update_role(id, new_role = \"id\") %>%     step_measure_input_long(transmittance, location = vars(channel)) %>%     step_measure_savitzky_golay(       differentiation_order = 1,       degree = 3,       window_side = 5     ) %>%     prep() }"},{"path":"https://jameshwade.github.io/measure/dev/reference/subtract_rf_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Subtract baseline using robust fitting method — subtract_rf_baseline","title":"Subtract baseline using robust fitting method — subtract_rf_baseline","text":"Subtract baseline using robust fitting method","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/subtract_rf_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subtract baseline using robust fitting method — subtract_rf_baseline","text":"","code":"subtract_rf_baseline(data, yvar, span = 2/3, maxit = c(5, 5))"},{"path":"https://jameshwade.github.io/measure/dev/reference/subtract_rf_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subtract baseline using robust fitting method — subtract_rf_baseline","text":"data dataframe containing variable baseline subtraction yvar name column baseline subtraction span Controls amount smoothing based fraction data use computing fitted value, defaults 2/3. maxit number iterations use robust fit, defaults c(5, 5) first value specifies iterations asymmetric weighting function second value symmetric weighting function.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/subtract_rf_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subtract baseline using robust fitting method — subtract_rf_baseline","text":"dataframe matching column data plus raw baseline columns","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/subtract_rf_baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subtract baseline using robust fitting method — subtract_rf_baseline","text":"","code":"meats_long %>% subtract_rf_baseline(yvar = transmittance) #> # A tibble: 21,500 × 8 #>       id water   fat protein channel transmittance   raw baseline #>    <int> <dbl> <dbl>   <dbl>   <int>         <dbl> <dbl>    <dbl> #>  1     1  60.5  22.5    16.7       1        -0.532  2.62     3.15 #>  2     1  60.5  22.5    16.7       2        -0.532  2.62     3.15 #>  3     1  60.5  22.5    16.7       3        -0.531  2.62     3.15 #>  4     1  60.5  22.5    16.7       4        -0.531  2.62     3.15 #>  5     1  60.5  22.5    16.7       5        -0.530  2.62     3.15 #>  6     1  60.5  22.5    16.7       6        -0.529  2.62     3.15 #>  7     1  60.5  22.5    16.7       7        -0.528  2.62     3.15 #>  8     1  60.5  22.5    16.7       8        -0.527  2.62     3.15 #>  9     1  60.5  22.5    16.7       9        -0.525  2.63     3.15 #> 10     1  60.5  22.5    16.7      10        -0.523  2.63     3.15 #> # ℹ 21,490 more rows"},{"path":"https://jameshwade.github.io/measure/dev/reference/tidy.recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidiers for measure steps — tidy.step_measure_input_long","title":"Tidiers for measure steps — tidy.step_measure_input_long","text":"Tidiers measure steps","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/tidy.recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidiers for measure steps — tidy.step_measure_input_long","text":"","code":"# S3 method for class 'step_measure_input_long' tidy(x, ...)  # S3 method for class 'step_measure_input_wide' tidy(x, ...)  # S3 method for class 'step_measure_output_long' tidy(x, ...)  # S3 method for class 'step_measure_output_wide' tidy(x, ...)  # S3 method for class 'step_measure_savitzky_golay' tidy(x, ...)"},{"path":"https://jameshwade.github.io/measure/dev/reference/tidy.recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidiers for measure steps — tidy.step_measure_input_long","text":"x step object. ... used.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/tunable_measure.html","id":null,"dir":"Reference","previous_headings":"","what":"tunable methods for measure — tunable_measure","title":"tunable methods for measure — tunable_measure","text":"functions define parameters can tuned specific steps. also define recommended objects dials package can used generate new parameter values characteristics.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/tunable_measure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tunable methods for measure — tunable_measure","text":"","code":"# S3 method for class 'step_measure_savitzky_golay' tunable(x, ...)"},{"path":"https://jameshwade.github.io/measure/dev/reference/tunable_measure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tunable methods for measure — tunable_measure","text":"x recipe step object ... used.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/tunable_measure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tunable methods for measure — tunable_measure","text":"tibble object.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/window_side.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter for measure steps — window_side","title":"Parameter for measure steps — window_side","text":"window_side() differentiation_order() used Savitzky-Golay processing.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/window_side.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter for measure steps — window_side","text":"","code":"window_side(range = c(1L, 5L), trans = NULL)  differentiation_order(range = c(0L, 4L), trans = NULL)"},{"path":"https://jameshwade.github.io/measure/dev/reference/window_side.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter for measure steps — window_side","text":"range two-element vector holding defaults smallest largest possible values, respectively. transformation specified, values transformed units. trans trans object scales package, scales::transform_log10() scales::transform_reciprocal(). provided, default used matches units used range. transformation, NULL.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/window_side.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter for measure steps — window_side","text":"function classes \"quant_param\" \"param\".","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/window_side.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter for measure steps — window_side","text":"parameter often used correct zero-count data tables proportions.","code":""},{"path":"https://jameshwade.github.io/measure/dev/reference/window_side.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter for measure steps — window_side","text":"","code":"window_side() #> Window Size (one side) (quantitative) #> Range: [1, 5] differentiation_order() #> Differentiation Order (quantitative) #> Range: [0, 4]"}]
